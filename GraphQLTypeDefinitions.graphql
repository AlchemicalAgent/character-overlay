### THIS FILE IS AUTO GENERATED

"""
Instruction for establishing a live connection that is updated once the underlying data changes.
"""
directive @live on QUERY

type Query {
  characterEditor(editHash: ID!): CharacterEditor
  character(id: ID!): Character
}

union CharacterEditor = CharacterEditorView | Error

type CharacterEditorView {
  character: Character!
}

type Character {
  id: ID!
  name: String!
  imageUrl: String
  health: Health!
  mana: Health
}

type Health {
  maximum: Int!
  current: Int!
}

type Error {
  reason: String!
}

type Mutation {
  setMaximumHealth(editHash: String!, newMaximumHealth: Int!): Boolean
  setCurrentHealth(editHash: String!, newCurrentHealth: Int!): Boolean
  setCharacterImage(editHash: String!, imageUrl: String!): Boolean
  characterSetName(editHash: String!, newName: String!): Boolean
  createCharacter: CreateCharacterResult!
}

union CreateCharacterResult = Error | CreateCharacterSuccess

type CreateCharacterSuccess {
  editHash: String!
}
